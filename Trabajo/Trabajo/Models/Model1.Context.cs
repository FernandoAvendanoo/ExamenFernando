//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trabajo.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExamenEntities1 : DbContext
    {
        public ExamenEntities1()
            : base("name=ExamenEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<catEstadoProcesos> catEstadoProcesos { get; set; }
        public virtual DbSet<catEstados> catEstados { get; set; }
        public virtual DbSet<catOrigen> catOrigen { get; set; }
        public virtual DbSet<catProductos> catProductos { get; set; }
        public virtual DbSet<catSexo> catSexo { get; set; }
        public virtual DbSet<catTipoProcesos> catTipoProcesos { get; set; }
        public virtual DbSet<tblClientes> tblClientes { get; set; }
        public virtual DbSet<tblTransacciones> tblTransacciones { get; set; }
    
        public virtual int Insertar_Transaccion(Nullable<int> parametro1, string parametro2, Nullable<System.DateTime> parametro3, Nullable<int> parametro4, Nullable<int> parametro5, Nullable<int> parametro6, Nullable<int> parametro7, Nullable<int> parametro8)
        {
            var parametro1Parameter = parametro1.HasValue ?
                new ObjectParameter("Parametro1", parametro1) :
                new ObjectParameter("Parametro1", typeof(int));
    
            var parametro2Parameter = parametro2 != null ?
                new ObjectParameter("Parametro2", parametro2) :
                new ObjectParameter("Parametro2", typeof(string));
    
            var parametro3Parameter = parametro3.HasValue ?
                new ObjectParameter("Parametro3", parametro3) :
                new ObjectParameter("Parametro3", typeof(System.DateTime));
    
            var parametro4Parameter = parametro4.HasValue ?
                new ObjectParameter("Parametro4", parametro4) :
                new ObjectParameter("Parametro4", typeof(int));
    
            var parametro5Parameter = parametro5.HasValue ?
                new ObjectParameter("Parametro5", parametro5) :
                new ObjectParameter("Parametro5", typeof(int));
    
            var parametro6Parameter = parametro6.HasValue ?
                new ObjectParameter("Parametro6", parametro6) :
                new ObjectParameter("Parametro6", typeof(int));
    
            var parametro7Parameter = parametro7.HasValue ?
                new ObjectParameter("Parametro7", parametro7) :
                new ObjectParameter("Parametro7", typeof(int));
    
            var parametro8Parameter = parametro8.HasValue ?
                new ObjectParameter("Parametro8", parametro8) :
                new ObjectParameter("Parametro8", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertar_Transaccion", parametro1Parameter, parametro2Parameter, parametro3Parameter, parametro4Parameter, parametro5Parameter, parametro6Parameter, parametro7Parameter, parametro8Parameter);
        }
    
        public virtual int InsertarTransaccion(string parametro1, string parametro2)
        {
            var parametro1Parameter = parametro1 != null ?
                new ObjectParameter("Parametro1", parametro1) :
                new ObjectParameter("Parametro1", typeof(string));
    
            var parametro2Parameter = parametro2 != null ?
                new ObjectParameter("Parametro2", parametro2) :
                new ObjectParameter("Parametro2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarTransaccion", parametro1Parameter, parametro2Parameter);
        }
    
        public virtual int ITransaccion(string parametro2, Nullable<System.DateTime> parametro3, Nullable<int> parametro4, Nullable<int> parametro5, Nullable<int> parametro6, Nullable<int> parametro7, Nullable<int> parametro8)
        {
            var parametro2Parameter = parametro2 != null ?
                new ObjectParameter("Parametro2", parametro2) :
                new ObjectParameter("Parametro2", typeof(string));
    
            var parametro3Parameter = parametro3.HasValue ?
                new ObjectParameter("Parametro3", parametro3) :
                new ObjectParameter("Parametro3", typeof(System.DateTime));
    
            var parametro4Parameter = parametro4.HasValue ?
                new ObjectParameter("Parametro4", parametro4) :
                new ObjectParameter("Parametro4", typeof(int));
    
            var parametro5Parameter = parametro5.HasValue ?
                new ObjectParameter("Parametro5", parametro5) :
                new ObjectParameter("Parametro5", typeof(int));
    
            var parametro6Parameter = parametro6.HasValue ?
                new ObjectParameter("Parametro6", parametro6) :
                new ObjectParameter("Parametro6", typeof(int));
    
            var parametro7Parameter = parametro7.HasValue ?
                new ObjectParameter("Parametro7", parametro7) :
                new ObjectParameter("Parametro7", typeof(int));
    
            var parametro8Parameter = parametro8.HasValue ?
                new ObjectParameter("Parametro8", parametro8) :
                new ObjectParameter("Parametro8", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ITransaccion", parametro2Parameter, parametro3Parameter, parametro4Parameter, parametro5Parameter, parametro6Parameter, parametro7Parameter, parametro8Parameter);
        }
    }
}
